library(dplyr)
num_trials <- 10e6
simulations <- data_frame(
true_average = rbeta(num_trials, 81, 219),
hits = rbinom(num_trials, 300, true_average)
)
View(simulations)
View(simulations)
library(dplyr)
num_trials <- 10e6
simulations <- data_frame(
true_average = rbeta(num_trials, 81, 219),
hits = rbinom(num_trials, 300, true_average)
)
simulations
hits_100 <- simulations %<%
filter(hits == 100)
hits_100 <- simulations %>%
filter(hits == 100)
hit_100
hits_100 <- simulations %>%
filter(hits == 100)
hit_100
hit_100 <- simulations %>%
filter(hits == 100)
hit_100
simulations %>%
filter(hits %in% c(60, 80, 100)) %>%
ggplot(aes(true_average, color = factor(hits))) +
geom_density() +
labs(x = "True average of players with H hits / 300 at-bats",
color = "H")
library(ggplot2)
simulations %>%
filter(hits %in% c(60, 80, 100)) %>%
ggplot(aes(true_average, color = factor(hits))) +
geom_density() +
labs(x = "True average of players with H hits / 300 at-bats",
color = "H")
library(tidyr)
library(Lahman) # Baseball dataset
Batting
Example1 <- Batting
View(Example1)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
View(career)
Master %>%
tbl_df() %>%
dplyr::select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID")
career <- Master %>%
tbl_df() %>%
dplyr::select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID") %>%
dplyr::select(-playerID)
View(career)
View(career)
career %>%
filter(AB > 500) %>%
ggplot(aes(average)) +
geom_histogram() +
labs(x = "Average")
library(stats4)
career_filtered <- career %>%
filter(AB > 500)
View(career_filtered)
ll <- function(alpha, beta) {
x <- career_filtered$H
total <- career_filtered$AB
-sum(VGAM::dbetabinom.ab(x, total, alpha, beta, log = TRUE))
}
library(VGAM)
install.packages("VGAM")
?stats4
m <- mle(ll, start = list(alpha = 1, beta = 10), method = "L-BFGS-B",
lower = c(0.0001, .1))
library(VGAM)
install.packages("VGAM")
library(dplyr)
library(tidyr)
library(Lahman)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(Pitching, by = "playerID") %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
career <- Master %>%
tbl_df() %>%
dplyr::select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = "playerID")
alpha0 <- 101.4
beta0 <- 287.3
career_eb <- career %>%
mutate(eb_estimate = (H + alpha0) / (AB + alpha0 + beta0),
alpha1 = H + alpha0,
beta1 = AB - H + beta0)
career_eb %>%
filter(name == "Hank Aaron")
hank_aaron_average <- hank_aaron$eb_estimate
hank_aaron <- career_eb %>%
filter(name == "Hank Aaron")
hank_aaron_average <- hank_aaron$eb_estimate
View(hank_aaron)
pbeta(.3, 3850, 8818)
career_eb %>%
filter(name == "Hank Aaron") %>%
do(data_frame(x = seq(.27, .33, .0002),
density = dbeta(x, .$alpha1, .$beta1))) %>%
ggplot(aes(x, density)) +
geom_line() +
geom_ribbon(aes(ymin = 0, ymax = density * (x < .3)),
alpha = .1, fill = "red") +
geom_vline(color = "red", lty = 2, xintercept = .3)
library(ggplot2)
career_eb %>%
filter(name == "Hank Aaron") %>%
do(data_frame(x = seq(.27, .33, .0002),
density = dbeta(x, .$alpha1, .$beta1))) %>%
ggplot(aes(x, density)) +
geom_line() +
geom_ribbon(aes(ymin = 0, ymax = density * (x < .3)),
alpha = .1, fill = "red") +
geom_vline(color = "red", lty = 2, xintercept = .3)
View(hank_aaron)
View(hank_aaron)
12364-3771
12364-3771+287
career_eb <- career_eb %>%
mutate(PEP = pbeta(.3, alpha1, beta1))
View(career_eb)
View(career)
ggplot(career_eb, aes(PEP)) +
geom_histogram(binwidth = .02) +
xlab("Posterior Error Probability (PEP)") +
xlim(0, 1)
ggplot(career_eb, aes(PEP)) +
geom_histogram(binwidth = .02) +
xlab("Posterior Error Probability (PEP)") +
xlim(0, 1)
career_eb %>%
ggplot(aes(eb_estimate, PEP, color = AB)) +
geom_point(size = 1) +
xlab("(Shrunken) batting average estimate") +
ylab("Posterior Error Probability (PEP)") +
geom_vline(color = "red", lty = 2, xintercept = .3) +
scale_colour_gradient(trans = "log", breaks = 10 ^ (1:5))
View(career_eb)
by_PEP <- career_eb %>%
arrange(PEP) %>%
mutate(rank = row_number()) %>%
select(rank, name, H, AB, eb_estimate, PEP)
View(by_PEP)
View(career_eb)
View(career)
View(career_eb)
by_PEP %>%
head(10) %>%
knitr::kable()
install.packages("knitr")
by_PEP %>%
head(10) %>%
knitr::kable()
by_PEP %>%
slice(90:100) %>%
knitr::kable()
top_players <- career_eb %>%
arrange(PEP) %>%
head(100)
View(top_players)
top_players <- career_eb %>%
arrange(PEP) %>%
head(100)
sum(top_players$PEP)
mean(top_players$PEP)
sorted_PEP <- career_eb %>%
arrange(PEP)
View(sorted_PEP)
mean(head(sorted_PEP$PEP, 50))
mean(head(sorted_PEP$PEP, 200))
sorted_PEP <- career_eb %>%
arrange(PEP)
View(sorted_PEP)
mean(head(sorted_PEP$PEP, 50))
mean(head(sorted_PEP$PEP, 200))
career_eb <- career_eb %>%
arrange(PEP) %>%
mutate(qvalue = cummean(PEP))
View(career_eb)
sum(top_players$PEP)
mean(top_players$PEP)
# Same process as above but for 50
mean(head(sorted_PEP$PEP, 50))
mean(head(sorted_PEP$PEP, 200))
sum(head(sorted_PEP$PEP, 200))
career_eb <- career_eb %>%
arrange(PEP) %>%
mutate(qvalue = cummean(PEP))
View(career_eb)
hall_of_fame <- career_eb %>%
filter(qvalue < .05)
View(hall_of_fame)
strict_hall_of_fame <- career_eb %>%
filter(qvalue < .01)
View(strict_hall_of_fame)
career_eb %>%
filter(qvalue < .25) %>%
ggplot(aes(qvalue, rank(PEP))) +
geom_line() +
xlab("q-value cutoff") +
ylab("Number of players included")
